aux_source_directory(. runtime_source)
aux_source_directory(manager  runtime_source)
aux_source_directory(executor runtime_source)
aux_source_directory(emulator runtime_source)
aux_source_directory(utility  runtime_source)

set(CMAKE_CXX_COMPILER "${ROCM_PATH}/bin/hipcc")
set(HCC_CXX_FLAGS  "-hc --amdgpu-target=gfx900 --amdgpu-target=gfx906 --amdgpu-target=gfx908 ")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${HCC_CXX_FLAGS}")

if(DEFINED ENV{FIM_LOG_LEVEL})
    add_definitions(-DFIM_LOG_LEVEL=$ENV{FIM_LOG_LEVEL})
else()
    add_definitions(-DFIM_LOG_LEVEL=0)
endif()

message(STATUS "FIM Log level is " $ENV{FIM_LOG_LEVEL})

if("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
add_library(FimRuntime SHARED ${runtime_source})
target_link_libraries (FimRuntime dramsim2 glog gflags)
elseif("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
add_library(FimRuntimeDev SHARED ${runtime_source})
target_link_libraries (FimRuntimeDev dramsim2 glog gflags)
endif()

if("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
install ( TARGETS FimRuntime LIBRARY DESTINATION /opt/rocm/lib/)
install ( FILES ${CMAKE_CURRENT_SOURCE_DIR}/../include/fim_runtime_api.h DESTINATION /opt/rocm/include )
install ( FILES ${CMAKE_CURRENT_SOURCE_DIR}/../include/fim_data_types.h DESTINATION /opt/rocm/include )
endif()
